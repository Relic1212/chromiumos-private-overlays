# Copyright 2015 The ChromiumOS Authors
# Distributed under the terms of the GNU General Public License v2

# Initial value just for style purposes.
USE=""

CHROMEOS_KERNEL_SPLITCONFIG="chromiumos-x86_64"
CHROMEOS_KERNEL_CONFIG="/mnt/host/source/src/private-overlays/overlay-kastellholmen/kconfigs/flex-linux-5_10.config"
CHROMEOS_KERNEL_ARCH="x86_64"

# We assume that our 64bit baseline CPU supports at least
# MMX, SSE, SSE2, and SSE3.
# This aligns with Chrome requirements:
# SSE2: https://crbug.com/350175
# SSE3: https://docs.google.com/document/d/1QUzL4MGNqX4wiLvukUwBf6FdCL35kCDoEJTm2wMkahw/preview
BOARD_COMPILER_FLAGS="-march=x86-64 -msse3"
BOARD_RUSTFLAGS="-Ctarget-cpu=x86-64 -Ctarget-feature=+sse3"
USE="${USE} march_x86-64"

# Include many firmwares as this is a "generic" board and might run on a
# wide variety of platforms with who knows what kind of hardware.
LINUX_FIRMWARE="iwlwifi-all"

# Use LLVM amdgpu target when building LLVM.
LLVM_TARGETS="AMDGPU X86"

USE="${USE} containers kvm_host crosvm-gpu virtio_gpu"

USE="${USE} legacy_keyboard legacy_power_button sse kernel-5_15"

# LLVM is required to build the llvmpipe and radeon drivers.
USE="${USE} llvm"

# Enable camera HALv3
USE="${USE} arc-camera3"

# Enable vivid
USE="${USE} vivid"

# Enable hostap hwsim tests.
USE="${USE} wifi_hostap_test"

# Include the kernel in the base image.
USE="${USE} include_vmlinuz"

# Enable chromeos-config.
USE="${USE} unibuild has_chromeos_config_bsp"

# Enable Vulkan for ClusterFuzz.
##USE="${USE} vulkan"

# Use legacy pre-Groot UI for initramfs and init script screens.
USE="${USE} legacy_firmware_ui"

# Enable a few more video cards as this is a generic board.
##VIDEO_CARDS="intel llvmpipe nouveau radeon"

# Virtual machines don't have physical TPMs.
# Enable TPM2.0 simulator on it.
##USE="${USE} tpm tpm_insecure_fallback tpm2  tpm_dynamic -pinweaver"

# Enable vTPM proxy on it for driver-level TPM simulator.
##USE="${USE} vtpm_proxy"

# No support for zero-copy on virtual machines.
USE="${USE} -video_capture_use_gpu_memory_buffer"

# Enable fscrypt v2 usage on 5.4+
USE="${USE} direncription_allow_v2"

# mesa-llvmpipe does not require this flag yet.
##USE="${USE} -gpu_sandbox_start_early"

# Enable VKMS and drm_atomic for compositor testing on VMs
USE="${USE} vkms drm_atomic"

# Enable biod testing
#USE="${USE} biod"


## custom
##USE="${USE} os_install_service"
USE="${USE} libinput"
USE="${USE} libglvnd"
#USE="${USE} kvm_guest"


USE="${USE} -rgbkbd"
USE="${USE} builtin_fw_x86_intel_ucode"
#USE="${USE} builtin_fw_x86_amd_ucode"

USE="${USE}  vfat nvme mmc"

USE="${USE} login_enable_crosh_sudo"
USE="${USE} frecon"
USE="${USE} drm_dp_aux_chardev"
#USE="${USE} gbm"
USE="${USE} gpu_sandbox_start_early"


USE="${USE}  tpm2 "

##USE="${USE}  -tpm -tpm_dynamic tpm_insecure_fallback "
##USE="${USE}  -tpm2_simulator -tpm2_simulator_manufacturer"

# USE="${USE} tpm tpm_insecure_fallback tpm2  tpm_dynamic -pinweaver"
USE="${USE} tpm_insecure_fallback tpm2  tpm_dynamic -pinweaver"

USE="${USE}  input_devices_keyboard input_devices_mouse  vtconsole"
#USE="${USE} pcserial vtconsole"
#USE="${USE} fbconsole"
#TTY_CONSOLE="ttyS0"



# Will set this when things are figured out
# USE="${USE} -diagnostics"
# USE="${USE} -diagnostics-minidiag"
# USE="${USE} -hw_details"
# USE="${USE} -crash_reporting -debugd"
# USE="${USE} -syslog"
# USE="${USE} -debug -chrome_debug -chrome_debug_tests -chromeless_tests -cros-debug"

USE="${USE} vulkan"

 #linux_firmware_ rtw8822c           : <unknown>
 #- - linux_firmware_ rtw8852a           : <unknown>
 #- - linux_firmware_ rtw8852c  

LINUX_FIRMWARE="${LINUX_FIRMWARE} iwlwifi-all i915_tgl i915_kbl i915_kbl rtw8822c rtw8852a rtw8852c"


VIDEO_CARDS="i965 i915 intel iris iHD iHD_g8 iHD_g9 iHD_g11 iHD_g12 llvmpipe -nouveau amdgpu radeon radeonsi -vmware virgl"


# Try getting thte vm going

# # USE flags for Crostini, CrOSVM, and containers.
USE="${USE} crostini bruschetta containers kvm kvm_host crosvm-gpu virtio_gpu adb"

# # Enable Downloadable Content (DLC), optional USE for Crostini.
USE="${USE} dlc dlc_test iioservice"

# USE="${USE} -vivid"
# USE="${USE} -fbconsole -pcserial -vtconsole "

# Enable support for some UEFI-specific features.
USE="${USE} uefi"
# Enable management of EFI boot entries when installing/updating.
##USE="${USE} manage_efi_boot_entries"

# Repair the GPT when installing/updating, mostly for mass deploy (b/257478857).
##USE="${USE} postinstall_cgpt_repair"

# Enable chromeos postinstall to configure both efi
# and syslinux configuration files on install.
##USE="${USE} postinstall_config_efi_and_legacy"

#USE="${USE} chrome_media vaapi x264 x265 hevc_codec widevine lto thinlto"

# TODO: does surface need this?
USE="${USE} -gbm    vivid native_gpu_memory_buffers" #-tpm -tpm_dynamic"

#USE="${USE} gbm pcserial vtconsole fbconsole vivid native_gpu_memory_buffers -tpm -tpm_dynamic"
#TTY_CONSOLE="ttyS0"
